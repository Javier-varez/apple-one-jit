#[derive(Debug, PartialEq, Eq, Copy, Clone)]
pub enum BaseInstruction {
    Adc,
    And,
    Asl,
    Bcc,
    Bcs,
    Beq,
    Bit,
    Bmi,
    Bne,
    Bpl,
    Brk,
    Bvc,
    Bvs,
    Clc,
    Cld,
    Cli,
    Clv,
    Cmp,
    Cpx,
    Cpy,
    Dec,
    Dex,
    Dey,
    Eor,
    Inc,
    Inx,
    Iny,
    Jmp,
    Jsr,
    Lda,
    Ldx,
    Ldy,
    Lsr,
    Nop,
    Ora,
    Pha,
    Php,
    Pla,
    Plp,
    Rol,
    Ror,
    Rti,
    Rts,
    Sbc,
    Sec,
    Sed,
    Sei,
    Sta,
    Stx,
    Sty,
    Tax,
    Tay,
    Tsx,
    Txa,
    Txs,
    Tya,
}

impl BaseInstruction {
    pub fn is_branching_op(&self) -> bool {
        match self {
            BaseInstruction::Bcc => true,
            BaseInstruction::Bcs => true,
            BaseInstruction::Beq => true,
            BaseInstruction::Bne => true,
            BaseInstruction::Bmi => true,
            BaseInstruction::Bpl => true,
            BaseInstruction::Bvc => true,
            BaseInstruction::Bvs => true,
            BaseInstruction::Jmp => true,
            BaseInstruction::Jsr => true,
            BaseInstruction::Rts => true,
            BaseInstruction::Rti => true,
            _ => false,
        }
    }
}
