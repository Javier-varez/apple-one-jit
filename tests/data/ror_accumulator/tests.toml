[test-preserves-v-and-sets-c]
entry_state = { accumulator = 0x8f, x = 0x00, y = 0, sp = 0xff, pc = 0x800, flags = ["N", "Z", "V", "C"] }
exit_state = { accumulator = 0xC7, x = 0x00, y = 0, sp = 0xff, pc = 0x801, flags = ["C", "V", "N"] }

[test-preserves-v-and-sets-c-2]
entry_state = { accumulator = 0x8f, x = 0x00, y = 0, sp = 0xff, pc = 0x800, flags = ["N", "Z"] }
exit_state = { accumulator = 0x47, x = 0x00, y = 0, sp = 0xff, pc = 0x801, flags = ["C"] }

[test-preserves-v-and-clears-c]
entry_state = { accumulator = 0x8e, x = 0x00, y = 0, sp = 0xff, pc = 0x800, flags = ["N", "Z", "V"] }
exit_state = { accumulator = 0x47, x = 0x00, y = 0, sp = 0xff, pc = 0x801, flags = ["V"] }

[test-preserves-v-and-clears-c-2]
entry_state = { accumulator = 0x8e, x = 0x00, y = 0, sp = 0xff, pc = 0x800, flags = ["N", "Z", "C"] }
exit_state = { accumulator = 0xC7, x = 0x00, y = 0, sp = 0xff, pc = 0x801, flags = ["N"] }

[test-sets-zero-flag]
entry_state = { accumulator = 0x01, x = 0x00, y = 0, sp = 0xff, pc = 0x800, flags = ["N"] }
exit_state = { accumulator = 0x00, x = 0x00, y = 0, sp = 0xff, pc = 0x801, flags = ["Z", "C"] }
